{
	"@metadata": {
		"authors": [
			"MusikAnimal"
		]
	},
	"apihelp-wishedit-summary": "Create or update a wish in the Community Wishlist.",
	"apihelp-wishedit-param-wish": "The wish to update. This can be either the full page title, a prefixed wish ID (e.g. \"W123\"), or the wish ID as an integer. Leave empty to create a new wish.",
	"apihelp-wishedit-param-status": "The status of the wish.",
	"apihelp-wishedit-param-focusarea": "The focus area the wish belongs to. This can be either the full page title, a prefixed focus area ID (e.g. \"FA123\"), or the focus area ID as an integer.",
	"apihelp-wishedit-param-title": "The title of the wish.",
	"apihelp-wishedit-param-description": "The description of the wish. May contain wikitext.",
	"apihelp-wishedit-param-type": "The type of the wish.",
	"apihelp-wishedit-param-audience": "The primary group of users who are benefited by the wish (e.g. \"new users\" or \"administrators\").",
	"apihelp-wishedit-param-tags": "A list of tags associated with the wish.",
	"apihelp-wishedit-param-phabtasks": "A list of Phabricator task IDs (e.g. \"T1234\").",
	"apihelp-wishedit-param-proposer": "The user who proposed the wish.",
	"apihelp-wishedit-param-created": "The date and time that the wish was created.",
	"apihelp-wishedit-param-baselang": "The base language of the wish from which translations are made.",
	"apierror-wishedit-notawish": "The page you are trying to edit is not a valid wish.",
	"apierror-focusareaedit-notafocusarea": "The page you are trying to edit is not a valid focus area.",
	"apierror-focusareaedit-nopermission": "You do not have permission to create or edit focus areas in the Community Wishlist.",
	"apierror-wishlist-entity-parse": "Unable to parse wishlist entity. It may contain invalid wikitext. Please ensure there are no extraneous pipe characters (<code>|</code>) in the wikitext.",
	"apihelp-focusareaedit-summary": "Create or update a focus area in the Community Wishlist.",
	"apihelp-focusareaedit-param-focusarea": "The focus area to update. This can be either the full page title, a prefixed focus area ID (e.g. \"FA123\"), or the focus area ID as an integer. Leave empty to create a new focus area.",
	"apihelp-focusareaedit-param-status": "The status of the focus area.",
	"apihelp-focusareaedit-param-title": "The title of the focus area.",
	"apihelp-focusareaedit-param-description": "The description of the focus area. May contain wikitext.",
	"apihelp-focusareaedit-param-shortdescription": "A short description of the focus area.",
	"apihelp-focusareaedit-param-owners": "Organizational teams and affiliates that own the focus area.",
	"apihelp-focusareaedit-param-volunteers": "Community members who volunteer to help with the focus area.",
	"apihelp-focusareaedit-param-created": "The date and time that the focus area was created.",
	"apihelp-focusareaedit-param-baselang": "The base language of the focus area from which translations are made.",
	"apihelp-query+communityrequests-wishes-summary": "Get a list of wishes from the Community Wishlist.",
	"apihelp-query+communityrequests-wishes-param-lang": "The language code to filter wishes by.",
	"apihelp-query+communityrequests-wishes-param-tags": "Limit results to wishes with at least one of the specified tags.",
	"apihelp-query+communityrequests-wishes-param-statuses": "Limit results to only those wishes with one of these statuses.",
	"apihelp-query+communityrequests-wishes-param-focusareas": "Limit results to only those wishes in one of these focus areas, identified by wikitext value (i.e. 'FAx' where x is an integer).",
	"apihelp-query+communityrequests-wishes-param-prop": "The wish properties to get.",
	"apihelp-query+communityrequests-wishes-param-sort": "The wish property to sort by.",
	"apihelp-query+communityrequests-wishes-param-dir": "The direction to sort by.",
	"apihelp-query+communityrequests-wishes-param-limit": "The maximum number of wishes to return.",
	"apihelp-query+communityrequests-wishes-param-count": "Include a count of the total number of wishes in the response.",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-status": "Status of the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-type": "The type of wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-title": "Title of the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-focusarea": "Focus area the wish belongs to",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-description": "Description of the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-audience": "Primary group of users who are benefited by the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-tags": "Tags associated with the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-phabtasks": "Phabricator tasks associated with the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-proposer": "User who proposed the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-votecount": "Number of users who supported the wish",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-created": "Date and time the wish was created",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-updated": "Date and time the wish was last updated",
	"apihelp-query+communityrequests-wishes-paramvalue-prop-baselang": "The base language of the wish from which translations are made",
	"apihelp-query+communityrequests-wishes-paramvalue-sort-created": "Sort by creation date",
	"apihelp-query+communityrequests-wishes-paramvalue-sort-updated": "Sort by last updated date",
	"apihelp-query+communityrequests-wishes-paramvalue-sort-votecount": "Sort by number of supporters",
	"apihelp-query+communityrequests-wishes-paramvalue-sort-title": "Sort by title"
}
